# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Keyboard Backlight
# add the following to cron -e to set on boot
# @reboot sleep 3 && test -c /dev/hidraw0 && /usr/bin/printf "xLRGB\x10\x44\x04" > /dev/hidraw0
# test with 
# printf "xLRGB\x10\x44\x04" | sudo tee /dev/hidraw0

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left left
set $down down
set $up up
set $right right
# Your preferred terminal emulator. You can change it by running:
# sudo update-alternatives --config x-terminal-emulator
# set $term wezterm flatpak run org.wezfurlong.wezterm
set $term kitty
# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu pkill -x rofi || rofi -show combi -modes combi -combi-modes "window,drun,run,dmenu" -theme ~/.config/rofi/theme.rasi
set $BROWSER firefox

#xwayland disable

### Output configuration
#
# Example configuration:
#
   output HDMI-A-1 resolution 1920x1080 position 1920,0
   # output HDMI-A-1 disable
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

# display config for MNT Pocket Reform
output DSI-1 transform 270
output DSI-1 scale 1.5

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 300 '~/bin/lock.sh' \
         timeout 600 'brightnessctl --save; brightnessctl set 0' \
              resume 'brightnessctl --restore' \
         before-sleep '~/bin/lock.sh'

        #  timeout 300 'swaylock -f -c 000000' \
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# Prevents idle when audio is playing
exec sway-audio-idle-inhibit

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

#####################
# Borders and Fonts #
#####################

default_border pixel 2
font IosevkaTermSlab NFM:monospace 0.01
titlebar_border_thickness 2
gaps inner 6
smart_borders on

# font pango:monospace 0.01
# default_floating_border none
# titlebar_padding 1
# hide_edge_borders both
# gaps outer 2

################
# Key bindings #
################
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+Shift+Return exec $term -e zsh -is eval 'fetch' &
    bindsym $mod+Shift+s exec grim ~/Pictures/$(date +'screenshot-%Y-%m-%d-%H-%M-%S').png
    bindsym $mod+Shift+x exec grim -g "$(slurp)" ~/Pictures/$(date +'screenshot-%Y-%m-%d-%H-%M-%S').png
    bindsym $mod+Shift+v exec pavucontrol
    bindsym $mod+Shift+l exec swaylock

    # Kill focused window
    bindsym $mod+Escape kill
    bindsym --border button3 kill

    # Start your launcher
    bindsym $mod+Tab exec $menu
    bindsym $mod+t exec thunar

    # programs
    bindsym $mod+o exec ~/Apps/Obsidian
    bindsym $mod+b exec $BROWSER
    bindsym $mod+d exec legcord
    bindsym $mod+l exec ~/bin/lock.sh
    


    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    #bindsym $mod+Left focus left
    #bindsym $mod+Down focus down
    #bindsym $mod+Up focus up
    #bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    #bindsym $mod+Shift+Left move left
    #bindsym $mod+Shift+Down move down
    #bindsym $mod+Shift+Up move up
    #bindsym $mod+Shift+Right move right

    bindsym $mod+F1 exec brightnessctl s 10%-
    bindsym $mod+F2 exec brightnessctl s +8%
    bindsym XF86MonBrightnessDown exec brightnessctl s 10%-
    bindsym XF86MonBrightnessUp exec brightnessctl s +10%
    bindsym $mod+F3 exec pactl set-sink-volume @DEFAULT_SINK@ -5%
    bindsym $mod+F4 exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym $mod+F5 exec pactl set-sink-mute @DEFAULT_SINK@ toggle
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+h splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+Shift+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    #bindsym Left resize shrink width 10px
    #bindsym Down resize grow height 10px
    #bindsym Up resize shrink height 10px
    #bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# class                 border  backgr. text    indicator child_border
client.focused          #32d8bc #080808 #ffffff #00855E   #32d8bc
client.focused_inactive #118080 #000000 #eeeeee #00855E   #118080
client.unfocused        #118080 #000000 #888888 #00855E   #118080
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #ffffff

font pango: Inter, Icons Medium 11

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while ~/bin/status; do sleep 60; done
#
#    colors {
#        statusline #ffffff
#        background #000000
#        focused_workspace #ffffff #ffffff #000000
#        active_workspace #ffffff #888888 #000000
#        inactive_workspace #000000 #000000 #ffffff
#    }
#
#    font pango: Inter, Icons Bold Italic 14
#}

for_window [app_id="pavucontrol"] floating enable
for_window [app_id="/home/wiz/Documents/pixelcomposer/test.pxc - Pixel Composer"] floating enable

exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP=sway

# help ff load faster?
exec dbus-update-activation-environment --systemd DBUS_SESSION_BUS_ADDRESS DISPLAY XAUTHORITY &

# fix KDE cursor appearing in sway
seat seat0 xcursor_theme Adwaita 24

# waybar
exec waybar

# start gnome xsettings daemon
exec /usr/libexec/gsd-xsettings

# start a policykit agent
exec lxpolkit

# start network manager applet
exec nm-applet --indicator

# start bluetooth applet
exec blueman-applet

# start volume applet
exec pasystray

# start MNT Reform tray menu
exec /usr/libexec/reform-tools/reform-tray.py

# start wallpaper script
# exec /usr/libexec/reform-tools/reform-wallpaper.py
exec ~/.azotebg

exec ~/.config/logon.sh

include config.d/*
